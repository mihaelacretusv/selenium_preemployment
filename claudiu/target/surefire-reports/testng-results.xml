<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="15" passed="14">
  <reporter-output>
  </reporter-output>
  <suite name="LoginandRegister" duration-ms="69" started-at="2019-02-20T13:01:36 EET" finished-at="2019-02-20T13:01:36 EET">
    <groups>
      <group name="negative">
        <method signature="LoginTest.checkInvalidUserLogIn()[pri:0, instance:logintest.LoginTest@55f3ddb1]" name="checkInvalidUserLogIn" class="logintest.LoginTest"/>
        <method signature="LoginTest.tryToLoginWithNoEmailAdress()[pri:0, instance:logintest.LoginTest@55f3ddb1]" name="tryToLoginWithNoEmailAdress" class="logintest.LoginTest"/>
        <method signature="LoginTest.tryToLoginWithNoPassword()[pri:0, instance:logintest.LoginTest@55f3ddb1]" name="tryToLoginWithNoPassword" class="logintest.LoginTest"/>
        <method signature="LoginTest.tryToLoginWithOnlyEmail()[pri:0, instance:logintest.LoginTest@55f3ddb1]" name="tryToLoginWithOnlyEmail" class="logintest.LoginTest"/>
        <method signature="LoginTest.tryToLoginWithWrongEmailAndPassword()[pri:0, instance:logintest.LoginTest@55f3ddb1]" name="tryToLoginWithWrongEmailAndPassword" class="logintest.LoginTest"/>
        <method signature="RegisterTest.checkInvalidZipCode()[pri:0, instance:logintest.RegisterTest@8bd1b6a]" name="checkInvalidZipCode" class="logintest.RegisterTest"/>
        <method signature="RegisterTest.checkMandatoryFieldsNotCompletedAll()[pri:0, instance:logintest.RegisterTest@8bd1b6a]" name="checkMandatoryFieldsNotCompletedAll" class="logintest.RegisterTest"/>
        <method signature="RegisterTest.checkPasswordinvalidPolicy()[pri:0, instance:logintest.RegisterTest@8bd1b6a]" name="checkPasswordinvalidPolicy" class="logintest.RegisterTest"/>
        <method signature="RegisterTest.empthyadress()[pri:0, instance:logintest.RegisterTest@8bd1b6a]" name="empthyadress" class="logintest.RegisterTest"/>
        <method signature="RegisterTest.empthycity()[pri:0, instance:logintest.RegisterTest@8bd1b6a]" name="empthycity" class="logintest.RegisterTest"/>
        <method signature="RegisterTest.empthyphone()[pri:0, instance:logintest.RegisterTest@8bd1b6a]" name="empthyphone" class="logintest.RegisterTest"/>
      </group> <!-- negative -->
      <group name="positive">
        <method signature="LoginTest.testLogin(java.lang.String, java.lang.String)[pri:0, instance:logintest.LoginTest@55f3ddb1]" name="testLogin" class="logintest.LoginTest"/>
        <method signature="LoginTest.verifyLogInWithSucces()[pri:0, instance:logintest.LoginTest@55f3ddb1]" name="verifyLogInWithSucces" class="logintest.LoginTest"/>
        <method signature="LoginTest.verifyLogOutWithSucces()[pri:0, instance:logintest.LoginTest@55f3ddb1]" name="verifyLogOutWithSucces" class="logintest.LoginTest"/>
        <method signature="RegisterTest.checkRegisterwithSucces()[pri:0, instance:logintest.RegisterTest@8bd1b6a]" name="checkRegisterwithSucces" class="logintest.RegisterTest"/>
      </group> <!-- positive -->
    </groups>
    <test name="TestForRegisterandLogin" duration-ms="69" started-at="2019-02-20T13:01:36 EET" finished-at="2019-02-20T13:01:36 EET">
      <class name="logintest.RegisterTest">
        <test-method status="PASS" signature="empthycity()[pri:0, instance:logintest.RegisterTest@8bd1b6a]" name="empthycity" duration-ms="0" started-at="2019-02-20T13:01:36 EET" finished-at="2019-02-20T13:01:36 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- empthycity -->
        <test-method status="PASS" signature="checkMandatoryFieldsNotCompletedAll()[pri:0, instance:logintest.RegisterTest@8bd1b6a]" name="checkMandatoryFieldsNotCompletedAll" duration-ms="0" started-at="2019-02-20T13:01:36 EET" finished-at="2019-02-20T13:01:36 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkMandatoryFieldsNotCompletedAll -->
        <test-method status="PASS" signature="empthyadress()[pri:0, instance:logintest.RegisterTest@8bd1b6a]" name="empthyadress" duration-ms="0" started-at="2019-02-20T13:01:36 EET" finished-at="2019-02-20T13:01:36 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- empthyadress -->
        <test-method status="PASS" signature="empthyphone()[pri:0, instance:logintest.RegisterTest@8bd1b6a]" name="empthyphone" duration-ms="0" started-at="2019-02-20T13:01:36 EET" finished-at="2019-02-20T13:01:36 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- empthyphone -->
        <test-method status="PASS" signature="checkPasswordinvalidPolicy()[pri:0, instance:logintest.RegisterTest@8bd1b6a]" name="checkPasswordinvalidPolicy" duration-ms="0" started-at="2019-02-20T13:01:36 EET" finished-at="2019-02-20T13:01:36 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPasswordinvalidPolicy -->
        <test-method status="PASS" signature="checkInvalidZipCode()[pri:0, instance:logintest.RegisterTest@8bd1b6a]" name="checkInvalidZipCode" duration-ms="0" started-at="2019-02-20T13:01:36 EET" finished-at="2019-02-20T13:01:36 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkInvalidZipCode -->
        <test-method status="PASS" signature="checkRegisterwithSucces()[pri:0, instance:logintest.RegisterTest@8bd1b6a]" name="checkRegisterwithSucces" duration-ms="0" started-at="2019-02-20T13:01:36 EET" finished-at="2019-02-20T13:01:36 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkRegisterwithSucces -->
      </class> <!-- logintest.RegisterTest -->
      <class name="logintest.LoginTest">
        <test-method status="PASS" signature="checkInvalidUserLogIn()[pri:0, instance:logintest.LoginTest@55f3ddb1]" name="checkInvalidUserLogIn" duration-ms="6" started-at="2019-02-20T13:01:36 EET" finished-at="2019-02-20T13:01:36 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkInvalidUserLogIn -->
        <test-method status="FAIL" signature="testLogin(java.lang.String, java.lang.String)[pri:0, instance:logintest.LoginTest@55f3ddb1]" name="testLogin" duration-ms="0" started-at="2019-02-20T13:01:36 EET" finished-at="2019-02-20T13:01:36 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[mihaela.cretu@softvision.ro]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at pageobjects.Login.clickemailAdress(Login.java:29)
at logintest.LoginTest.testLogin(LoginTest.java:40)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:131)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:570)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:170)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:790)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:143)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at org.testng.TestRunner.privateRun(TestRunner.java:763)
at org.testng.TestRunner.run(TestRunner.java:594)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:398)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:392)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1146)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1067)
at org.testng.TestNG.runSuites(TestNG.java:997)
at org.testng.TestNG.run(TestNG.java:965)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="tryToLoginWithNoPassword()[pri:0, instance:logintest.LoginTest@55f3ddb1]" name="tryToLoginWithNoPassword" duration-ms="0" started-at="2019-02-20T13:01:36 EET" finished-at="2019-02-20T13:01:36 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryToLoginWithNoPassword -->
        <test-method status="PASS" signature="verifyLogInWithSucces()[pri:0, instance:logintest.LoginTest@55f3ddb1]" name="verifyLogInWithSucces" duration-ms="0" started-at="2019-02-20T13:01:36 EET" finished-at="2019-02-20T13:01:36 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogInWithSucces -->
        <test-method status="PASS" signature="tryToLoginWithOnlyEmail()[pri:0, instance:logintest.LoginTest@55f3ddb1]" name="tryToLoginWithOnlyEmail" duration-ms="0" started-at="2019-02-20T13:01:36 EET" finished-at="2019-02-20T13:01:36 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryToLoginWithOnlyEmail -->
        <test-method status="PASS" signature="tryToLoginWithNoEmailAdress()[pri:0, instance:logintest.LoginTest@55f3ddb1]" name="tryToLoginWithNoEmailAdress" duration-ms="0" started-at="2019-02-20T13:01:36 EET" finished-at="2019-02-20T13:01:36 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryToLoginWithNoEmailAdress -->
        <test-method status="PASS" signature="tryToLoginWithWrongEmailAndPassword()[pri:0, instance:logintest.LoginTest@55f3ddb1]" name="tryToLoginWithWrongEmailAndPassword" duration-ms="0" started-at="2019-02-20T13:01:36 EET" finished-at="2019-02-20T13:01:36 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryToLoginWithWrongEmailAndPassword -->
        <test-method status="PASS" signature="verifyLogOutWithSucces()[pri:0, instance:logintest.LoginTest@55f3ddb1]" name="verifyLogOutWithSucces" duration-ms="0" started-at="2019-02-20T13:01:36 EET" finished-at="2019-02-20T13:01:36 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogOutWithSucces -->
      </class> <!-- logintest.LoginTest -->
    </test> <!-- TestForRegisterandLogin -->
  </suite> <!-- LoginandRegister -->
</testng-results>
